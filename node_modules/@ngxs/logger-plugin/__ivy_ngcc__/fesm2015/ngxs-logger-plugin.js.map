{"version":3,"file":"ngxs-logger-plugin.js","sources":["@ngxs/logger-plugin/src/internals.ts","@ngxs/logger-plugin/src/action-logger.ts","@ngxs/logger-plugin/src/log-writer.ts","@ngxs/logger-plugin/src/symbols.ts","@ngxs/logger-plugin/src/logger.plugin.ts","@ngxs/logger-plugin/src/logger.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const repeat = (str: string, times: number) => new Array(times + 1).join(str);\n\nexport const pad = (num: number, maxLength: number) =>\n  repeat('0', maxLength - num.toString().length) + num;\n\nexport function formatTime(time: Date) {\n  return (\n    pad(time.getHours(), 2) +\n    `:` +\n    pad(time.getMinutes(), 2) +\n    `:` +\n    pad(time.getSeconds(), 2) +\n    `.` +\n    pad(time.getMilliseconds(), 3)\n  );\n}\n","import { getActionTypeFromInstance, Store } from '@ngxs/store';\n\nimport { formatTime } from './internals';\nimport { LogWriter } from './log-writer';\n\nexport class ActionLogger {\n  constructor(private action: any, private store: Store, private logWriter: LogWriter) {}\n\n  dispatched(state: any) {\n    const actionName = getActionTypeFromInstance(this.action);\n    const formattedTime = formatTime(new Date());\n\n    const message = `action ${actionName} @ ${formattedTime}`;\n    this.logWriter.startGroup(message);\n\n    // print payload only if at least one property is supplied\n    if (this._hasPayload(this.action)) {\n      this.logWriter.logGrey('payload', { ...this.action });\n    }\n\n    this.logWriter.logGrey('prev state', state);\n  }\n\n  completed(nextState: any) {\n    this.logWriter.logGreen('next state', nextState);\n    this.logWriter.endGroup();\n  }\n\n  errored(error: any) {\n    this.logWriter.logRedish('next state after error', this.store.snapshot());\n    this.logWriter.logRedish('error', error);\n    this.logWriter.endGroup();\n  }\n\n  private _hasPayload(event: any) {\n    const nonEmptyProperties = this._getNonEmptyProperties(event);\n    return nonEmptyProperties.length > 0;\n  }\n\n  private _getNonEmptyProperties(event: any) {\n    const keys = Object.keys(event);\n    const values = keys.map(key => event[key]);\n    return values.filter(value => value !== undefined);\n  }\n}\n","import { NgxsLoggerPluginOptions } from './symbols';\nexport class LogWriter {\n  private logger: any;\n\n  constructor(private options: NgxsLoggerPluginOptions) {\n    this.options = this.options || <any>{};\n    this.logger = options.logger || console;\n  }\n\n  startGroup(message: string) {\n    const startGroupFn = this.options.collapsed\n      ? this.logger.groupCollapsed\n      : this.logger.group;\n    try {\n      startGroupFn.call(this.logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n  }\n\n  endGroup() {\n    try {\n      this.logger.groupEnd();\n    } catch (e) {\n      this.logger.log('ââ log end ââ');\n    }\n  }\n\n  logGrey(title: string, payload: any) {\n    const greyStyle = 'color: #9E9E9E; font-weight: bold';\n    this.log(title, greyStyle, payload);\n  }\n\n  logGreen(title: string, payload: any) {\n    const greenStyle = 'color: #4CAF50; font-weight: bold';\n    this.log(title, greenStyle, payload);\n  }\n\n  logRedish(title: string, payload: any) {\n    const redishStyle = 'color: #FD8182; font-weight: bold';\n    this.log(title, redishStyle, payload);\n  }\n\n  log(title: string, color: string, payload: any) {\n    if (this.isIE()) {\n      this.logger.log(title, payload);\n    } else {\n      this.logger.log('%c ' + title, color, payload);\n    }\n  }\n\n  isIE(): boolean {\n    const ua =\n      typeof window !== 'undefined' && window.navigator.userAgent\n        ? window.navigator.userAgent\n        : '';\n    let msIE = false;\n    const oldIE = ua.indexOf('MSIE ');\n    const newIE = ua.indexOf('Trident/');\n    if (oldIE > -1 || newIE > -1) {\n      msIE = true;\n    }\n    return msIE;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLoggerPluginOptions {\n  /** Auto expand logged actions  */\n  collapsed?: boolean;\n\n  /** Provide alternate console.log implementation */\n  logger?: any;\n\n  /** Disable the logger. Useful for prod mode. */\n  disabled?: boolean;\n\n  /** Predicate for actions to be the logged. Takes action and state snapshot as parameters */\n  filter?: (action: any, state: any) => boolean;\n}\n\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport { NgxsNextPluginFn, NgxsPlugin, Store } from '@ngxs/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ActionLogger } from './action-logger';\nimport { LogWriter } from './log-writer';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\n\n@Injectable()\nexport class NgxsLoggerPlugin implements NgxsPlugin {\n  private _store: Store;\n  private _logWriter: LogWriter;\n\n  constructor(\n    @Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions,\n    private _injector: Injector\n  ) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    if (this._options.disabled || !this._options.filter!(event, state)) {\n      return next(state, event);\n    }\n\n    this._logWriter = this._logWriter || new LogWriter(this._options);\n    // Retrieve lazily to avoid cyclic dependency exception\n    this._store = this._store || this._injector.get<Store>(Store);\n\n    const actionLogger = new ActionLogger(event, this._store, this._logWriter);\n\n    actionLogger.dispatched(state);\n\n    return next(state, event).pipe(\n      tap(nextState => {\n        actionLogger.completed(nextState);\n      }),\n      catchError(error => {\n        actionLogger.errored(error);\n        throw error;\n      })\n    );\n  }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { NgxsLoggerPlugin } from './logger.plugin';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\n\nexport const USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\n\nexport function loggerOptionsFactory(options: NgxsLoggerPluginOptions) {\n  const defaultLoggerOptions: NgxsLoggerPluginOptions = {\n    logger: console,\n    collapsed: false,\n    disabled: false,\n    filter: () => true\n  };\n\n  return {\n    ...defaultLoggerOptions,\n    ...options\n  };\n}\n\n@NgModule()\nexport class NgxsLoggerPluginModule {\n  static forRoot(\n    options?: NgxsLoggerPluginOptions\n  ): ModuleWithProviders<NgxsLoggerPluginModule> {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLoggerPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n          useFactory: loggerOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n"]}